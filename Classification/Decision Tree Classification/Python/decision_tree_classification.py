## Importing the librariesimport numpy as npimport matplotlib.pyplot as pltimport pandas as pd## Importing the datasetdataset = pd.read_csv('Social_Network_Ads.csv')x = dataset.iloc[:, :-1].valuesy = dataset.iloc[:, -1].values## Splitting the dataset into the Training set and Test setfrom sklearn.model_selection import train_test_splitx_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.25, random_state = 0)## Feature Scalingfrom sklearn.preprocessing import StandardScalersc = StandardScaler()x_train = sc.fit_transform(x_train)x_test = sc.transform(x_test)## Training the Decision Tree Classification model on the Training setfrom sklearn.tree import DecisionTreeClassifierclassifier = DecisionTreeClassifier(criterion = 'entropy', random_state = 0)classifier.fit(x_train, y_train)## Predicting a new result#print(classifier.predict(sc.transform([[30, 87000]])))## Predicting the Test set resultsy_pred = classifier.predict(x_test)#print(np.concatenate((y_pred.reshape(len(y_pred),1), y_test.reshape(len(y_test),1)),1))## Visualizing the Training set resultsfrom matplotlib.colors import ListedColormapx_set, y_set = sc.inverse_transform(x_train), y_trainx1, x2 = np.meshgrid(np.arange(start = x_set[:, 0].min() - 10, stop = x_set[:, 0].max() + 10, step = 0.25),                     np.arange(start = x_set[:, 1].min() - 1000, stop = x_set[:, 1].max() + 1000, step = 0.25))plt.contourf(x1, x2, classifier.predict(sc.transform(np.array([x1.ravel(), x2.ravel()]).T)).reshape(x1.shape),             alpha = 0.75, cmap = ListedColormap(('red', 'green')))plt.xlim(x1.min(), x1.max())plt.ylim(x2.min(), x2.max())for i, j in enumerate(np.unique(y_set)):    plt.scatter(x_set[y_set == j, 0], x_set[y_set == j, 1], c = ListedColormap(('red', 'green'))(i), label = j)plt.title('Decision Tree Classification (Training set)')plt.xlabel('Age')plt.ylabel('Estimated Salary')plt.legend()plt.show()