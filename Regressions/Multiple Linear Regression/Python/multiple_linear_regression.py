############################ Importing Libraries ###########################import numpy as npimport matplotlib.pyplot as pltimport pandas as pd######################### Importing Dataset ################################dataset = pd.read_csv('50_Startups.csv')################## Index Independant and dependant values ##################x = dataset.iloc[:, :-1].valuesy = dataset.iloc[:, -1].values##################### Encoding the Independant variable ####################from sklearn.compose import ColumnTransformerfrom sklearn.preprocessing import OneHotEncoderct = ColumnTransformer(transformers =[('encoder', OneHotEncoder(), [3])], remainder='passthrough')x = np.array(ct.fit_transform(x))########### Splitting the dataset into Training set and Test set ##########from sklearn.model_selection import train_test_splitx_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.2, random_state = 0)######### Training the Multiple Linear Regression on Training set #########from sklearn.linear_model import LinearRegressionregressor = LinearRegression()regressor.fit(x_train, y_train)##################### Predicting the Test set results #####################y_pred = regressor.predict(x_test)np.set_printoptions(precision = 2)print(np.concatenate((y_pred.reshape(len(y_pred), 1), y_test.reshape(len(y_test), 1)), 1))#Making a single prediction#profit of a startup with #R&D Spend = 160000#Administration Spend = 130000# Marketing Spend = 300000 # State = 'California'print(regressor.predict([[1, 0, 0, 160000, 130000, 300000]]))